swagger: "2.0"

info:
  version: "1.0"
  title: Artrunde Public API
  license:
    name: MIT
host: api-rodin-dev.artrunde.com

basePath: /v1
schemes:
  - https

paths:

  /admin/debug:
    get:
      summary: "Get debug information"
      description: "Get debug information about query"
      operationId: "debugUrl"
      tags:
          - "Debug"
      produces:
        - application/json
      responses:
        200:
          description: "Debug information"
          schema:
            $ref: "#/definitions/Debug"

  /admin/tags:
      post:
        tags:
        - "Tag"
        summary: "Create tag"
        description: "Create a new tag with labels"
        operationId: "createNewTag"
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: "body"
          name: "body"
          description: "Tag object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Tag"
        responses:
          200:
            description: "Successful result"
            schema:
              $ref: "#/definitions/Tag"

  /admin/tags/{tag_id}:
    get:
      tags:
        - "Tag"
      summary: "Get tag"
      description: "Retrieve data about a specific tag"
      operationId: "getTagByID"
      produces:
        - application/json
      parameters:
        - name: "tag_id"
          in: path
          description: "Tag unique identifier"
          required: true
          type: string
          x-example: "country-name_58eb7321e71b7"
      responses:
        200:
          description: "Successful result"
          schema:
            $ref: "#/definitions/Tag"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"

### ref-compiler: BEGIN
definitions:

  ErrorMessages:
    type: object
    properties:
      text:
        type: string
        example: "Item(s) not found"
      type:
        type: string
        example: "warning"

  Error:
    type: object
    properties:
      meta:
        type: object
        properties:
          statusCode:
            type: integer
            example: 404
          statusMessage:
            type: string
            example: "Item(s) not found"
          count:
            type: integer
            example: 1
          version:
            type: string
            example: "v1.1.0"
          environment:
            type: string
            example: "dev"
          stage:
            type: string
            example: "stagename"
          build:
            type: string
            example: "555"
      messages:
        type: array
        items:
          $ref: "#/definitions/ErrorMessages"
      data:
        type: string

  Debug:
    type: object
    properties:
      event_params:
        type: object
    required:
      - "event_params"

  TagCategory:
    type: object
    properties:
      class:
        type: string
        example: "city"
      attribute:
        type: string
        example: "name"
    required:
      - "class"
      - "attribute"

  TagLabel:
    type: object
    properties:
      locale:
        type: string
        enum:
          - "en"
          - "dk"
      label:
        type: string
        example: "Berlin"
    required:
      - "locale"
      - "label"

  Tag:
    type: object
    properties:
      tag_id:
        type: string
      category:
        $ref: "#/definitions/TagCategory"
      labels:
        type: array
        items:
          $ref: "#/definitions/TagLabel"
    required:
      - "tag_id"
      - "category"
      - "labels"