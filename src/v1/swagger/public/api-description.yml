swagger: "2.0"

info:
  version: "1.0"
  title: Artrunde Public API
  license:
    name: MIT
host: api-rodin-dev.artrunde.com

basePath: /v1/public
schemes:
  - https

paths:

  /debug/:
    get:
      summary: "Get debug information"
      description: "Get debug information about query"
      operationId: "debugUrl"
      tags:
          - "Debug"
      produces:
        - application/json
      responses:
        200:
          description: "Debug information"
          schema:
            $ref: "#/definitions/Debug"

  /tags/:
      get:
        tags:
          - "Tags"
        summary: "Query tags"
        description: "Search for multiple tags. You can add multiple category filters with a comma delimiter e.g category=art_form,city. Note that either 'query' or 'category' must be present"
        operationId: "findTagsBySearchTerm"
        produces:
          - application/json
        parameters:
          - name: "query"
            in: query
            description: "Query for searching tags"
            required: false
            type: string
            x-example: "berlin"
          - name: "locale"
            in: query
            description: "Locale"
            required: true
            type: string
            x-example: "en"
          - name: "limit"
            in: query
            description: "Limit amount of results"
            required: false
            type: integer
            maximum: 100
            minimum: 1
            x-example: 50
            default: 10
          - name: "category"
            in: "query"
            description: "Categories to filter tags by"
            required: false
            type: "array"
            items:
              type: "string"
              enum:
              - "art_form"
              - "city"
              - "all"
              default: "all"
            collectionFormat: "csv"
        responses:
          200:
            description: "Successful result"
            schema:
              type: array
              items:
                $ref: "#/definitions/Tags"
          400:
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"

  /places/{place_id}:
      get:
        tags:
          - "Places"
        summary: "Get place data"
        description: "Retrieve data about a specific gallery, museum or exhibition"
        operationId: "findPlaceByID"
        produces:
          - application/json
        parameters:
          - name: "place_id"
            in: path
            description: "Place unique identifier"
            required: true
            type: string
            x-example: "45111ac0e7803"
        responses:
          200:
            description: "Successful result"
            schema:
              $ref: "#/definitions/Places"
          404:
            description: "Not found"
            schema:
              $ref: "#/definitions/Error"

### ref-compiler: BEGIN
definitions:

  ErrorMessages:
    type: object
    properties:
      text:
        type: string
        example: "Item(s) not found"
      type:
        type: string
        example: "warning"

  Error:
    type: object
    properties:
      meta:
        type: object
        properties:
          statusCode:
            type: integer
            example: 404
          statusMessage:
            type: string
            example: "Item(s) not found"
          count:
            type: integer
            example: 1
          version:
            type: string
            example: "v1.1.0"
          environment:
            type: string
            example: "dev"
          stage:
            type: string
            example: "stagename"
          build:
            type: string
            example: "555"
      messages:
        type: array
        items:
          $ref: "#/definitions/ErrorMessages"
      data:
        type: string

  Debug:
    type: object
    properties:
      event_params:
        type: object
    required:
      - "event_params"

  Tags:
      type: object
      properties:
        tag_id:
          type: string
          example: "5c000a452245"
        category:
          type: string
          example: "city"
        locale:
          type: string
          example: "en"
        label:
          type: "string"
          example: "Berlin, Germany"
      required:
        - "tag_id"
        - "category"
        - "locale"
        - "label"

  Places:
    type: object
    properties:
      place_id:
        type: string
        example: "45111ac0e7803"
      url_path:
        type: string
        example: "the-big-place-of-arts"
      name:
        type: string
        example: "The Big Place of Arts"
      address:
        type: object
        properties:
          address_1:
            type: string
            example: "Mullberry road 122"
          address_2:
            type: string
            example: ""
          postal_code:
            type: string
            example: "5000"
          country:
            type: string
            example: "Denmark"
          country_abbrev:
            type: string
            example: "dk"
      vat_number:
        type: string
        example: "01234567"
      create_time:
        type: string
        example: "2010-12-21T17:42:34+00:00"
    required:
      - "place_id"
      - "url_path"
      - "name"
      - "address"
      - "vat_number"
      - "create_time"